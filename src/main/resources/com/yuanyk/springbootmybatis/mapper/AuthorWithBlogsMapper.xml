<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yuanyk.springbootmybatis.mapper.AuthorWithBlogsMapper">
    <!--嵌套查询，先根据authorId分别查author表和blog表 start
        2次查询,n+1问题，性能慢
        （n个blog+1个author，若只需要获取author.nickname属性，
        仍然会查出n+1条记录，使用懒加载，若不需要使用blog表的属性则不会去查询）
    -->
    <resultMap id="UnionResultMap" type="com.yuanyk.springbootmybatis.pojo.AuthorWithBlogs">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="nickname" property="nickname" jdbcType="VARCHAR"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
        <!--column="id" 表示拿author表的id属性作为selectBlogByAuthorId方法的参数-->
        <collection property="blogs" javaType="List" column="id"
                    ofType="com.yuanyk.springbootmybatis.pojo.Blog" select="selectBlogByAuthorId"/>
    </resultMap>
    <resultMap id="BlogResultMap" type="com.yuanyk.springbootmybatis.pojo.Blog">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
        <result column="author_id" property="authorId" jdbcType="INTEGER"/>
    </resultMap>


    <select id="selectBlogByAuthorId" resultMap="BlogResultMap">
        select *
         from blog where author_id = #{authorId,jdbcType=INTEGER}
    </select>


    <select id="selectAuthorWithBlogs" resultMap="UnionResultMap" parameterType="java.lang.Integer">
        select
        *
        from author
        where id = #{id,jdbcType=INTEGER}
    </select>
    <!--嵌套查询，先根据blogId查blog表，再根据blog表查出的authorId去查author表 end-->


    <!--嵌套结果，一次查询 start-->
    <resultMap id="UnionResultMap2" type="com.yuanyk.springbootmybatis.pojo.AuthorWithBlogs">
        <id column="aid" property="id"/>
        <result column="aname" property="nickname" jdbcType="VARCHAR"/>
        <result column="act" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="aut" property="updateTime" jdbcType="TIMESTAMP"/>
        <collection property="blogs" javaType="List" ofType="com.yuanyk.springbootmybatis.pojo.Blog">
            <id column="bid" property="id" jdbcType="INTEGER"/>
            <result column="bname" property="name" jdbcType="VARCHAR"/>
            <result column="bct" property="createTime" jdbcType="TIMESTAMP"/>
            <result column="but" property="updateTime" jdbcType="TIMESTAMP"/>
            <result column="aid" property="authorId" jdbcType="INTEGER"/>
        </collection>
    </resultMap>

    <select id="selectAuthorWithBlogs2" resultMap="UnionResultMap2" parameterType="java.lang.Integer">
        select
        b.id as bid,b.name as bname,b.create_time as bct,b.update_time as but,
        a.id as aid,a.nickname as aname,a.create_time as act,a.update_time as aut
        from blog b,author a
        where b.author_id = a.id
         and a.id = #{id,jdbcType=INTEGER}
    </select>
    <!--嵌套结果，一次查询 end-->


</mapper>